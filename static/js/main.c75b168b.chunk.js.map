{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","style","height","width","border","TextForm","useState","text","setText","color","heading","value","onChange","event","target","rows","disabled","length","showAlert","newText","toUpperCase","toLowerCase","replace","trim","split","join","text1","console","log","forEach","element","substr","navigator","clipboard","writeText","filter","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","message","App","setMode","setAlert","setColor","setTimeout","disableDarkMode","document","body","backgroundColor","cls","mod","classList","remove","add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"oMAKe,SAASA,EAAOC,GAE3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,MAAzE,SACA,sBAAKD,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeE,KAAK,IAAjC,SAAsCH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMJ,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAA7C,UACE,oBAAIL,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAOE,KAAK,IAAxD,sBAWJ,sBAAKF,UAAU,SAAf,UACE,qBAAKA,UAAU,yBAAyBM,QAAS,WAAKP,EAAMQ,WAAW,SAAS,SAAUC,MAAO,CAACC,OAAO,OAAOC,MAAM,OAAOC,OAAQ,qBACrI,qBAAKX,UAAU,4BAA4BM,QAAS,WAAKP,EAAMQ,WAAW,YAAY,SAAUC,MAAO,CAACC,OAAO,OAAOC,MAAM,OAAOC,OAAQ,qBAC3I,qBAAKX,UAAU,0BAA0BM,QAAS,WAAKP,EAAMQ,WAAW,UAAU,SAAUC,MAAO,CAACC,OAAO,OAAOC,MAAM,OAAOC,OAAQ,qBACvI,qBAAKX,UAAU,0BAA0BM,QAAS,WAAKP,EAAMQ,WAAW,UAAU,SAAUC,MAAO,CAACC,OAAO,OAAOC,MAAM,OAAOC,OAAQ,qBACvI,qBAAKX,UAAU,0BAA0BM,QAAS,WAAKP,EAAMQ,WAAW,UAAU,SAAUC,MAAO,CAACC,OAAO,OAAOC,MAAM,OAAOC,OAAQ,qBACvI,qBAAKX,UAAU,uBAAuBM,QAAS,WAAKP,EAAMQ,WAAW,OAAO,SAAUC,MAAO,CAACC,OAAO,OAAOC,MAAM,OAAOC,OAAQ,qBACjI,qBAAKX,UAAU,wBAAwBM,QAAS,WAAKP,EAAMQ,WAAW,QAAQ,UAAWC,MAAO,CAACC,OAAO,OAAOC,MAAM,OAAOC,OAAQ,qBACpI,qBAAKX,UAAU,uBAAuBM,QAAS,WAAKP,EAAMQ,WAAW,OAAO,SAAUC,MAAO,CAACC,OAAO,OAAOC,MAAM,OAAOC,OAAQ,wBAEnI,qBAAKX,UAAS,sCAA8C,SAAbD,EAAME,KAAe,QAAU,SAA9E,iCCpCG,SAASW,EAASb,GAC7B,IAqEA,EAAwBc,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,OACI,qCACI,sBAAKf,UAAU,YAAYQ,MAAO,CAACQ,MAAmB,SAAbjB,EAAME,KAAe,QAAU,SAAxE,UACI,sBAAKD,UAAU,OAAf,UACA,oBAAIA,UAAU,OAAd,SAAsBD,EAAMkB,UAC5B,0BAAUjB,UAAU,eAAekB,MAAOJ,EAAMK,SAVrC,SAACC,GAEpBL,EAAQK,EAAMC,OAAOH,QAQ6Db,GAAG,8BAA8BiB,KAAK,UAEhH,wBAAQtB,UAAU,uBAAuBuB,SAAwB,IAAdT,EAAKU,OAAYlB,QA7E1D,WAClB,GAAmB,IAAhBQ,EAAKU,OACJzB,EAAM0B,UAAU,mDAAmD,cAClE,CACD,IAAIC,EAAQZ,EAAKa,cACjBZ,EAAQW,GACR3B,EAAM0B,UAAU,0BAA0B,aAuEtC,kCACA,wBAAQzB,UAAU,uBAAuBuB,SAAwB,IAAdT,EAAKU,OAAYlB,QApEzD,WACnB,GAAmB,IAAhBQ,EAAKU,OACJzB,EAAM0B,UAAU,mDAAmD,cAClE,CACD,IAAIC,EAAQZ,EAAKc,cACjBb,EAAQW,GACR3B,EAAM0B,UAAU,0BAA0B,aA8DtC,kCACA,wBAAQzB,UAAU,uBAAuBuB,SAAwB,IAAdT,EAAKU,OAAYlB,QA3DxD,WACpB,GAAmB,IAAhBQ,EAAKU,OACJzB,EAAM0B,UAAU,0CAA0C,cACzD,CACD,IAAIC,EAAQZ,EAAKc,cAAcC,QAAQ,SAAU,KAAKC,OAAOC,MAAM,KAAKC,KAAK,KAC7EjB,EAAQW,GACR3B,EAAM0B,UAAU,6BAA6B,aAqDzC,yBACA,wBAAQzB,UAAU,uBAAuBuB,SAAwB,IAAdT,EAAKU,OAAYlB,QAlDxD,WACpB,GAAmB,IAAhBQ,EAAKU,OACJzB,EAAM0B,UAAU,mDAAmD,cAClE,CACD,IAAIQ,EAAMnB,EAAKc,cAAcC,QAAQ,SAAU,KAAKC,OAAOC,MAAM,KAC7DL,EAAU,GACdQ,QAAQC,IAAI,SAASF,GACrBA,EAAMG,SAAQ,SAAAC,GACVX,GAAWW,EAAQ,GAAGV,cAAgBU,EAAQC,OAAO,GAAG,OAE5DJ,QAAQC,IAAIT,GACZX,EAAQW,GACR3B,EAAM0B,UAAU,mCAAmC,aAsC/C,wBACA,wBAAQzB,UAAU,uBAAuBuB,SAAwB,IAAdT,EAAKU,OAAYlB,QAnCzD,WACA,IAAhBQ,EAAKU,OACJzB,EAAM0B,UAAU,wCAAwC,WAExDc,UAAUC,UAAUC,UAAU3B,GAC9Bf,EAAM0B,UAAU,uBAAuB,aA8BnC,+BACA,wBAAQzB,UAAU,uBAAuBuB,SAAwB,IAAdT,EAAKU,OAAYlB,QA3B5D,WAChB,GAAmB,IAAhBQ,EAAKU,OACJzB,EAAM0B,UAAU,iDAAiD,cAChE,CAEDV,EADY,IAEZhB,EAAM0B,UAAU,2BAA2B,aAqBvC,sBAEJ,sBAAKzB,UAAU,iBAAiBQ,MAAO,CAACQ,MAAmB,SAAbjB,EAAME,KAAe,QAAU,SAA7E,UACI,mDACA,8BAAIa,EAAKiB,MAAM,KAAKW,QAAO,SAACL,GAAW,OAAyB,IAAlBA,EAAQb,UAAeA,OAArE,cAA0FV,EAAKU,OAA/F,iBACA,8BAAI,KAAQV,EAAKiB,MAAM,KAAKW,QAAO,SAACL,GAAW,OAAyB,IAAlBA,EAAQb,UAAeA,OAA7E,gBACA,yCACA,4BAAIV,EAAKU,OAAS,EAAIV,EAAO,8BDxC7ChB,EAAO6C,aAAa,CAChBxC,MAAM,kBACNyC,UAAU,SEtCCC,MAdf,SAAe9C,GAKX,OACI,qBAAKS,MAAO,CAACC,OAAO,QAApB,SACKV,EAAM+C,OAAS,sBAAK9C,UAAS,sBAAiBD,EAAM+C,MAAM1C,KAA7B,gCAAiE2C,KAAK,QAApF,UACZ,iCAPO,SAACC,GAChB,IAAMC,EAAQD,EAAKpB,cACnB,OAAOqB,EAAMC,OAAO,GAAGvB,cAAcsB,EAAME,MAAM,GAKhCC,CAAWrD,EAAM+C,MAAM1C,QADpB,KACsCL,EAAM+C,MAAMO,cCqE/DC,MAlEf,WACE,MAAwBzC,mBAAS,SAAjC,mBAAOZ,EAAP,KAAasD,EAAb,KACA,EAA0B1C,mBAAS,MAAnC,mBAAOiC,EAAP,KAAcU,EAAd,KACA,EAA0B3C,mBAAS,SAAnC,mBAAOG,EAAP,KAAcyC,EAAd,KAEMhC,EAAY,SAAC4B,EAAQjD,GACzBoD,EAAS,CACPH,QAAQA,EACRjD,KAAKA,IAEPsD,YAAW,WACTF,EAAS,QACR,OAoCL,OACE,qCAGE,cAAC1D,EAAD,CAAQK,MAAO,YAAaF,KAAMA,EAAM0D,gBArCpB,WACtBJ,EAAQ,SACRK,SAASC,KAAKrD,MAAMsD,gBAAkB,QACtCrC,EAAU,sBAAsB,YAkC4ClB,WArB3D,SAACwD,EAAIC,GATtBJ,SAASC,KAAKI,UAAUC,OAAO,aAC/BN,SAASC,KAAKI,UAAUC,OAAO,cAC/BN,SAASC,KAAKI,UAAUC,OAAO,gBAC/BN,SAASC,KAAKI,UAAUC,OAAO,WAC/BN,SAASC,KAAKI,UAAUC,OAAO,cAC/BN,SAASC,KAAKI,UAAUC,OAAO,cAC/BN,SAASC,KAAKI,UAAUC,OAAO,WAC/BN,SAASC,KAAKI,UAAUC,OAAO,YAI/BN,SAASC,KAAKI,UAAUE,IAAI,MAAMJ,GAEhCR,EAAQS,GACRP,EAASM,GACTH,SAASC,KAAKrD,MAAMsD,gBAAkB,QACtCrC,EAAUuC,EAAI,iBAAiB,cAe/B,cAAC,EAAD,CAAOlB,MAAOA,IACd,qBAAK9C,UAAU,iBAAf,SAII,cAACY,EAAD,CAAUa,UAAWA,EAAWT,MAAOA,EAAOC,QAAQ,mEAAmEhB,KAAMA,UC3D1HmE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASoB,eAAe,SAM1BZ,K","file":"static/js/main.c75b168b.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    \r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">{props.aboutText}</a>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n        \r\n            <div className=\"d-flex\">\r\n              <div className=\"bg-danger rounded mx-2\" onClick={()=>{props.toggleMode('danger','dark')}} style={{height:'30px',width:'30px',border: '1px solid black'}}></div>\r\n              <div className=\"bg-secondary rounded mx-2\" onClick={()=>{props.toggleMode('secondary','dark')}} style={{height:'30px',width:'30px',border: '1px solid black'}}></div>\r\n              <div className=\"bg-success rounded mx-2\" onClick={()=>{props.toggleMode('success','dark')}} style={{height:'30px',width:'30px',border: '1px solid black'}}></div>\r\n              <div className=\"bg-warning rounded mx-2\" onClick={()=>{props.toggleMode('warning','dark')}} style={{height:'30px',width:'30px',border: '1px solid black'}}></div>\r\n              <div className=\"bg-primary rounded mx-2\" onClick={()=>{props.toggleMode('primary','dark')}} style={{height:'30px',width:'30px',border: '1px solid black'}}></div>\r\n              <div className=\"bg-info rounded mx-2\" onClick={()=>{props.toggleMode('info','dark')}} style={{height:'30px',width:'30px',border: '1px solid black'}}></div>\r\n              <div className=\"bg-light rounded mx-2\" onClick={()=>{props.toggleMode('light','light')}} style={{height:'30px',width:'30px',border: '1px solid black'}}></div>\r\n              <div className=\"bg-dark rounded mx-2\" onClick={()=>{props.toggleMode('dark','dark')}} style={{height:'30px',width:'30px',border: '1px solid white'}}></div>\r\n            </div>\r\n            <div className={`form-check form-switch text-${props.mode==='dark'? 'white' : 'black'}`}>Toggle Mode</div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\n// Validation for proptypes\r\nNavbar.propTypes={\r\n    title : PropTypes.string.isRequired,\r\n    aboutText : PropTypes.string.isRequired\r\n}\r\n\r\n// Default props\r\nNavbar.defaultProps={\r\n    title:\"Title goes here\",\r\n    aboutText:\"About\"\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        if(text.length === 0){\r\n            props.showAlert('Please enter some value to change in upper case!','danger');\r\n        }else{\r\n            let newText=text.toUpperCase();\r\n            setText(newText);\r\n            props.showAlert('Converted to uppercase!','success');\r\n        }\r\n    }\r\n    \r\n    const handleLowClick = ()=>{\r\n        if(text.length === 0){\r\n            props.showAlert('Please enter some value to change in lower case!','danger');\r\n        }else{\r\n            let newText=text.toLowerCase();\r\n            setText(newText);\r\n            props.showAlert('Converted to lowercase!','success');\r\n        }\r\n    }\r\n    \r\n    const handleSlugClick = ()=>{\r\n        if(text.length === 0){\r\n            props.showAlert('Please enter some value to create slug!','danger');\r\n        }else{\r\n            let newText=text.toLowerCase().replace(/\\s\\s+/g, ' ').trim().split(' ').join('-');\r\n            setText(newText);\r\n            props.showAlert('Slug created successfully!','success');\r\n        }\r\n    }\r\n    \r\n    const handleTitleCase = ()=>{\r\n        if(text.length === 0){\r\n            props.showAlert('Please enter some value to change in title case!','danger');\r\n        }else{\r\n            let text1=text.toLowerCase().replace(/\\s\\s+/g, ' ').trim().split(' ');\r\n            let newText = \"\";\r\n            console.log('text1 ',text1);\r\n            text1.forEach(element =>{\r\n                newText += element[0].toUpperCase() + element.substr(1)+' ';\r\n            });\r\n            console.log(newText);\r\n            setText(newText);\r\n            props.showAlert('Title case applied successfully!','success');\r\n        }\r\n    }\r\n    \r\n    const handleCopyText = ()=>{\r\n        if(text.length === 0){\r\n            props.showAlert('Please enter some value to copy text!','danger');\r\n        }else{\r\n            navigator.clipboard.writeText(text);\r\n            props.showAlert('Copied to clipboard!','success');\r\n        }\r\n    }\r\n    \r\n    const handleClear = ()=>{\r\n        if(text.length === 0){\r\n            props.showAlert('Please enter some value to see the reflection!','danger');\r\n        }else{\r\n            let newText='';\r\n            setText(newText);\r\n            props.showAlert('Text crear successfully!','success');\r\n        }\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        //console.log('Changed');\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('');\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{color:props.mode==='dark'? 'white' : 'black'}}>\r\n                <div className=\"mb-3\">\r\n                <h1 className='mb-4'>{props.heading}</h1>\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"exampleFormControlTextarea1\" rows=\"10\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1\" disabled={text.length===0} onClick={handleUpClick}>Convert To Uppercase</button>\r\n                <button className=\"btn btn-primary mx-1\" disabled={text.length===0} onClick={handleLowClick}>Convert To Lowercase</button>\r\n                <button className=\"btn btn-primary mx-1\" disabled={text.length===0} onClick={handleSlugClick}>Create Slug</button>\r\n                <button className=\"btn btn-primary mx-1\" disabled={text.length===0} onClick={handleTitleCase}>Title Case</button>\r\n                <button className=\"btn btn-primary mx-1\" disabled={text.length===0} onClick={handleCopyText}>Copt to Clipboard</button>\r\n                <button className=\"btn btn-primary mx-1\" disabled={text.length===0} onClick={handleClear}>Clear</button>\r\n            </div>\r\n            <div className=\"container my-3\" style={{color:props.mode==='dark'? 'white' : 'black'}}>\r\n                <h2>Your text summary</h2>\r\n                <p>{text.split(\" \").filter((element)=>{return element.length !==0 }).length  } words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(\" \").filter((element)=>{return element.length !==0 }).length} Read time</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length > 0 ? text : 'Nothing to preview!' }</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    } \r\n    return (\r\n        <div style={{height:'50px'}}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.message}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const [color, setColor] = useState('white');\n\n  const showAlert = (message,type) =>{\n    setAlert({\n      message:message,\n      type:type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const disableDarkMode = () =>{\n    setMode('light');\n    document.body.style.backgroundColor = \"white\";\n    showAlert('Dark mode disabled!','success');\n    // document.title = \"TextUtils - Light Mode\";\n  }\n  const removeBodyClass = () => {\n    document.body.classList.remove('bg-danger');\n    document.body.classList.remove('bg-primary');\n    document.body.classList.remove('bg-secondary');\n    document.body.classList.remove('bg-dark');\n    document.body.classList.remove('bg-success');\n    document.body.classList.remove('bg-warning');\n    document.body.classList.remove('bg-info');\n    document.body.classList.remove('bg-light');\n  }\n  const toggleMode = (cls,mod) =>{\n    removeBodyClass();\n    document.body.classList.add('bg-'+cls);\n    if(mode === 'light'){\n      setMode(mod);\n      setColor(cls);\n      document.body.style.backgroundColor = \"white\"; \n      showAlert(mod+' mode enabled!','success');\n      \n    }else{\n      setMode(mod);\n      setColor(cls);\n      document.body.style.backgroundColor = \"white\";\n      showAlert(mod+' mode enabled!','success');\n    } \n  }\n\n  return (\n    <>\n      {/* <Router> */}\n      {/* <Navbar title={\"TextUtils\"} aboutText=\"About Us\"/> */}\n      <Navbar title={\"TextUtils\"} mode={mode} disableDarkMode={disableDarkMode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      {/* <Routes> */}\n          {/* <Route path=\"/about\" element={<About color={color} mode={mode}/>}/> */}\n          {/* <Route path=\"/\" element={<TextForm showAlert={showAlert} color={color} heading=\"Try TextUtils - Word Counter, Charactor Counter, Copy Text etc. \" mode={mode}/>}/> */}\n          <TextForm showAlert={showAlert} color={color} heading=\"Try TextUtils - Word Counter, Charactor Counter, Copy Text etc. \" mode={mode}/>\n      {/* </Routes> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}